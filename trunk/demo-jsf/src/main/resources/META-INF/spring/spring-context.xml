<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms" 
	xmlns:lang="http://www.springframework.org/schema/lang" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:dao="http://autodao.sourceforge.net/schemas/autodao-0.1"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://autodao.sourceforge.net/schemas/autodao-0.1 http://autodao.sourceforge.net/schemas/autodao-0.1.xsd">

	<context:property-placeholder location="classpath:jdbc.properties,classpath:remoting.properties" />
	
	<context:component-scan base-package="com.demo.jsf;com.demo.ws.endpoints" />
	
	<aop:config>
		<aop:pointcut id="serviceMethods" expression="execution(* persist.*Dao*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- User Beans -->
	<bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter">
		<property name="baseAddress" value="${jaxWsBaseUrl}"/>
	</bean>
	
	<bean id="devDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialPoolSize}" />
		<property name="maxActive" value="${jdbc.maxPoolSize}"></property>
	</bean>
	<!--  
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/upopDB"
		defaultObject="devDataSource"></jee:jndi-lookup>
	-->	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/upopDB" />
		<property name="defaultObject" ref="devDataSource" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.demo.jsf.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
	</bean>
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--  enable the configuration of transactional behavior based on annotations  -->
    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"
		p:cacheQueries="true" p:sessionFactory-ref="sessionFactory"
		p:allowCreate="false" />
		
	
	<bean id="userService" class="com.demo.jsf.services.UserServiceImpl"></bean>
	<bean id="schemeDao" class="com.demo.jsf.dao.SchemeDaoImpl" />
	<bean id="factorDao" class="com.demo.jsf.dao.FactorDaoImpl" />
	<bean id="ruleDao" class="com.demo.jsf.dao.RuleDaoImpl" />
	<bean id="ruleCaseDao" class="com.demo.jsf.dao.RuleCaseDaoImpl" />
	<bean id="mappingSchemeDao" class="com.demo.jsf.dao.MappingSchemeDaoImpl" />
	<bean id="mappingSchemeRuleDao" class="com.demo.jsf.dao.MappingSchemeRuleDaoImpl" />
	<bean id="mappingSchemeRuleCaseDao" class="com.demo.jsf.dao.MappingSchemeRuleCaseDaoImpl" />
	<bean id="externalSystemDao" class="com.demo.jsf.dao.ExternalSystemDaoImpl" />
	<bean id="appSpecsDao" class="com.demo.jsf.dao.ApplicationSpecificationDaoImpl" />
	<bean id="appFieldSpecsDao" class="com.demo.jsf.dao.ApplicationFieldSpecificationDaoImpl" />
	<bean id="dataTypeDao" class="com.demo.jsf.dao.DataTypeDaoImpl" />
	
	

</beans>